team-server-post-build:
    kind: blueprint
    environment-type: sandbox
    cloud: kube_test
    defaults:
        service.deployment.template: low_end_requirements
    services:
        - team_server
        - portal
        - api_server


services-s3-access:
    service:
        tag: server
    kind: blueprint_extension
    custom_properties:
        metadata:
            AWS::CloudFormation::Authentication:
                S3AccessCreds: 
                    type: S3,
                    buckets: [ "ngdevbox" ]
                    roleName: 
                        Ref: InstanceRole


team-server-aws-instances:
    service: team_server
    kind:  blueprint_extension
    custom_properties:
        metadata:
            AWS::CloudFormation::Authentication:
                S3AccessCreds: 
                    type: S3,
                    buckets: [ "ngdevbox" ]
                    roleName: 
                        Ref: InstanceRole
                    
        properties:
            IamInstanceProfile: 
                ref: InstanceProfile
            SecurityGroupIds:
                - ref: SecurityGroup
            SubnetId:
                ref: PublicSubnet
        


team-server-integration-tests:
    kind: blueprint
    environment_type: sandbox
    cloud:
        name: aws_testing
        template: integratio_tests_cf.template
    services:
        - team_server:
            deployment: 
                template: multi_node

        - portal:
            deployment:
                template: multi_node

teamserver-aws-all-in-one:
    kind: blueprint
    profiles:
        post-build-tests:
            deployment_targets:
                - all_in_one_server:
                    kind: new_deployment
                    template: low_end_requirements
            environment_type: sandbox
            services:
                - team_server:
                    deployment: all_in_one_server
                - portal:
                    deployment: all_in_one_server
                - api_server:
                    deployment: all_in_one_server

    production:
        environment_type: always_on
        deployments:
            - main_server_prod_deployment:
                kind: existing_deployment
                selector: main_server
            - main_portal_prod_deployment:
                kind: existing_deployment
                selector: portal
            - main_api_prod_deployment:
                kind: existing_deployment
                selector: api
        defaults:
            upgrade_strategy: in-place
        services:
            - team_server:
                deployment: main_server_prod_deployment
            - portal:
                deployment: main_portal_prod_deployment
            - api_server:
                deployment: main_api_prod_deployment

    data:
        - admin_database:
            data_source: xx
            data_version: yy
        - server_database:
            data_source: xx
            data_version: yy
----------
default:
    kind: infra_requirements


low_end_requirements:
    kind: deployment_template
    minRam: 8192mb
    minCores: 2
    storage:
        - mount: '/dsfd'
          volume: volume1
    volumes:
        - name: volume1
          minDisk: 100gb
          minDiskType: ssd
          persistentDisk: true
          metadata:
              selector: slow
        - name: volume2

----------



